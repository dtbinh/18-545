



module scene_int(input prg_ray_t ray,
		 input logic v0, v1, v2,
		 input float_t xmin, xmax,
		 input float_t ymin, ymax,
		 input float_t zmin, zmax,
		 input isShadow,
		 input clk, rst,
		 output float_t tmin_scene, tmax_scene,
		 output logic miss, valid);



	scene_int_pl pl(.ray(),.v0,.v1,.v2,
			.xmin(),.xmax(),
			.ymin(),.ymax(),
			.zmin(),.zmax(),
			.isShadow(), .clk, .rst,
			.tmin_scene(),.tmax_scene(),
			.miss());


	logic us_valid, ds_valid, ds_stall;
	logic num_left_in_fifo;
	pipe_valid_stall pvs #(.WIDTH($bits(rayID)+1),.DEPTH(17))
			     (.clk,.rst,.us_valid,.us_data,.us_stall,
			      .ds_valid,.ds_data,.ds_stall,.num_left_in_fifo);

	logic[$bits(rayID)+1] data_in, data_out;
	logic we, re, full, exists_in_fifo, empty;
	logic[3:0] num_left_in_fifo;
	fifo #(.WIDTH($bits(rayID)+1),.K(3),.EARLY_BY(0))
	     (.clk,.rst,data_in,we,re,full,exists_in_fifo,empty,data_out,num_left_in_fifo);

		

endmodule: scene_int


